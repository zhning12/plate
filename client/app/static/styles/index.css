/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
body{
  margin: 0px;
}
.container {
  display: -webkit-flex; /* Safari */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content:center;
}

.baidu {
  background-image: url(/static/images/index/sprite.png);
  background-position: 0px 0px;
  width: 540px;
  height: 258px; }

.google {
  background-image: url(/static/images/index/sprite.png);
  background-position: -540px 0px;
  width: 544px;
  height: 184px;
  text-indent: -9999px;

}

.logo {
    margin: 0 auto 5%;
    text-indent: -9999px;
    height: 81px;
    width:300px;
    background-image: url(/static/images/index/logo.jpg);
    
   
  }

  
  select, textarea, h1, h2, h3, h4, h5, h6 {
    font-family: 'Helvetica Neue', 'Helvetica', 'PingFang SC', 'Lantinghei SC', 'Hiragino Sans GB', 'WenQuanYi Micro Hei', sans-serif;
}
  h1 {

  }
